@model DonaldsonMotorsThree.ViewModels.BookingFormViewModel

@{
    ViewBag.Title = "Confirm Booking";
}
<br />
<h4>Confirm Booking</h4>

<style type="text/css">
    .currencyinput {
        border: 0px inset #ccc;
    }

        .currencyinput input {
            border: 0;
        }
</style>



@using (Html.BeginForm("Create", "ConfirmedBooking", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div>
        <h4 style="text-align: center">Booking Details</h4>
        <hr />
        <div class="form-border">
            <br />
            <br />
            <fieldset>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.BookedBooking.CustomerId)

                <div class="form-group row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.BookedBooking.StartDate, htmlAttributes: new { @class = "control-label" })
                    </div>

                    <div class="col-md-9">
                        @Html.DisplayFor(model => model.BookedBooking.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.BookedBooking.StartDate, new { htmlAttributes = new { @class = "form-control" } })

                        @* @Html.EditorFor(model => model.BookedBooking.StartDate, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.BookedBooking.StartDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*<div class="form-group row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.Booking.DurationInDays, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-9">
                @Html.EditorFor(model => model.Booking.DurationInDays, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Booking.DurationInDays, "", new { @class = "text-danger" })
            </div>
        </div>*@
                <div class="form-group row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.BookedBooking.BookingStatus, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-9">
                        @Html.DisplayFor(model => model.BookedBooking.BookingStatus, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.BookedBooking.BookingStatus, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BookedBooking.BookingStatus, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.BookedCustomer.FirstName, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-9">
                        @Html.DisplayFor(model => model.BookedCustomer.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.BookedCustomer.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BookedCustomer.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.BookedCustomer.LastName, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-9">
                        @Html.DisplayFor(model => model.BookedCustomer.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.BookedCustomer.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BookedCustomer.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.BookedCustomer.AddressLine1, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-9">
                        @Html.DisplayFor(model => model.BookedCustomer.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.BookedCustomer.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BookedCustomer.AddressLine1, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.BookedCustomer.AddressLine2, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-9">
                        @Html.DisplayFor(model => model.BookedCustomer.AddressLine2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.BookedCustomer.AddressLine2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BookedCustomer.AddressLine2, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.BookedBooking.Vehicle.RegNumber, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-9">
                        @Html.DisplayFor(model => model.BookedBooking.Vehicle.RegNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.BookedBooking.Vehicle.RegNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BookedBooking.Vehicle.RegNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.BookedBooking.Vehicle.Make, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-9">
                        @Html.DisplayFor(model => model.BookedBooking.Vehicle.Make, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.BookedBooking.Vehicle.Make, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BookedBooking.Vehicle.Make, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.BookedBooking.Vehicle.Model, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-9">
                        @Html.DisplayFor(model => model.BookedBooking.Vehicle.Model, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.BookedBooking.Vehicle.Model, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BookedBooking.Vehicle.Model, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.BookedBooking.Vehicle.EngineSize, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-9">
                        @Html.DisplayFor(model => model.BookedBooking.Vehicle.EngineSize, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.BookedBooking.Vehicle.EngineSize, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BookedBooking.Vehicle.EngineSize, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.BookedBooking.Vehicle.Milage, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-9">
                        @Html.DisplayFor(model => model.BookedBooking.Vehicle.Milage, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.BookedBooking.Vehicle.Milage, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BookedBooking.Vehicle.Milage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row hidden">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.BookedBooking.Jobs, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-9">
                        @Html.EditorForJob(model => model.BookedBooking.Jobs)
                    </div>
                </div>


                <div class="form-group row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.BookedBooking.Jobs, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-9">
                        @Html.DisplayFor(model => model.BookedBooking.Jobs,templateName: "JobsTemplate")
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-3">

                        @Html.LabelFor(model => model.BookedBooking.Total, htmlAttributes: new { @class = "control-label" })

                    </div>
                    <div class="col-md-9">
                        <span class="currencyinput">
                            £
                            @Html.DisplayFor(model => model.BookedBooking.Total, new { htmlAttributes = new { @class = "form-control  col-md-11" } })
                            @Html.HiddenFor(model => model.BookedBooking.Total, new { htmlAttributes = new { @class = "form-control  col-md-11" } })
                        </span>
                        @Html.ValidationMessageFor(model => model.BookedBooking.Total, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>
            <div class="form-group row">
                <div class="col-md-offset-2 col-md-4">
                    @Html.Partial("_BackToListButtonPartial")
                </div>
                <div class="col-md-4">
                    <a type="button" class="btn btn-success btn-sm" href="#" onclick="fixAndSubmit(this)">
                        Confirm Job Booking
                        <span class="glyphicon glyphicon-plus"></span>
                    </a>
                </div>
            </div>
        </div>
    </div>
}
@section scripts{
    <script language="javascript">
        $(function () {
            var dateInputsWithValue = $('input[type="date"][value!=""]');

            dateInputsWithValue.each(function (idx, elem) {
                    //checks.push($(elem).val());
                var inputFld = $(elem).get();
                inputFld[0].type = "text"; 
                    inputFld[0].value = inputFld[0].defaultValue;
                //inputFld[0].type = "date"; 
                ////$(elem).val(inputFld[0].defaultValue.toString());
                //console.log("Name:", inputFld[0].name);
                //console.log("Input:", inputFld);
                //console.log("Value:", inputFld[0].value);
                //console.log("defaultValue:", inputFld[0].defaultValue);
                });
        });


        function fixAndSubmit(callingAnchor) {
            $(callingAnchor).closest('form').submit();
        }
    </script>
}