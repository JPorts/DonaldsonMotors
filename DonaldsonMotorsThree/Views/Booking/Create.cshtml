@using System.Web.Mvc.Html
@model DonaldsonMotorsThree.ViewModels.BookingFormViewModel

@{
    ViewBag.Title = "Bookings";
}


@using (Html.BeginForm("CreateBooking", "Booking", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <br />
    <h4 style="text-align: center"><b><em>Book a Job</em></b></h4>
    <hr/>

    @Html.HiddenFor(m => m.Booking.PartIds)
    @Html.HiddenFor(m => m.Booking.JobIds)

    <div class="form-horizontal">
        <div class="form-group" id="job">
            <div class="col-md-offset-2 col-md-10">
                <label>Search for a job type to book: </label>
                <div class="tt-container">
                    <input id="jbookingjobs" name="jbookingjobs" class="typeahead form-control" type="text" value=""/>
                </div>
            </div>
            <br/>

            <div class="row">
                <div class="col-md-offset-2 col-md-10">
                    <ul class="list-group" id="jobs"></ul>
                </div>
            </div>
        </div>


        @*<div class="form-group" id="carpart">
            <div class="col-md-offset-2 col-md-10">
                <label>Parts</label>
                <div class="tt-container">

                    <input id="jbookingparts" name="jbookingparts" type="text" value="" class="typeahead form-control"/>
                </div>
                <br/>

                <div class="row">
                    <div class="col-md-offset-2 col-md-10">
                        <ul class="list-group" id="partslist"></ul>
                    </div>
                </div>
            </div>
        </div>*@

        <br/>
        <br/>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <label>Desired Start Date</label>
                <input name="startdate" type="date" value="StartDate" class="form-control"/>
            </div>
        </div>
        <br/>



        <br/>
        <br/>
        <br/>
        <br/>
        <h4 style="text-align: center">Add Vehicle Details</h4>
        <hr/>
        <br/>

        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="form-group">
            @Html.LabelFor(model => model.Vehicle.RegNumber, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Vehicle.RegNumber, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Vehicle.RegNumber, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Vehicle.Make, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Vehicle.Make, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Vehicle.Make, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Vehicle.Model, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Vehicle.Model, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Vehicle.Model, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Vehicle.EngineSize, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Vehicle.EngineSize, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Vehicle.EngineSize, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Vehicle.Milage, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Vehicle.Milage, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Vehicle.Milage, "", new {@class = "text-danger"})
            </div>
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <a type="button" class="btn btn-success btn-sm" href="#" onclick="$(this).closest('form').submit()">
                Proceed with booking
                <span class="glyphicon glyphicon-plus"></span>
            </a>

        </div>
    </div>
}

<br />
<br/>

<div class="col-md-offset-2 col-md-10">
    @Html.Partial("_BackToListButtonPartial")
</div>



@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        var vm = {
            jobIds: [],
            carPartIds: []
        };

        // When DOM is Ready //
        $(document).ready(function() {
            // Initialise ViewModel with Array for JobIds //


            // Bloodhound engine for search optimization //
            var jobs = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('jobRequirements'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/jobs?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            //var carParts = new Bloodhound({
            //    datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
            //    queryTokenizer: Bloodhound.tokenizers.whitespace,
            //    remote: {
            //        url: '/api/carparts?query=%QUERY',
            //        wildcard: '%QUERY'
            //    }
            //});

            // Start typeahead when length = 2 chars name:<> display:<> source:<> //
            $('#job .typeahead').typeahead({
                    minLength: 0,
                    highlight: true
                },
                {
                    name: 'jobs',
                    display: 'jobRequirements',
                    source: jobs
                });

            //$('#carpart .typeahead').typeahead(
            //    { minlength: 0, highlight: true },
            //    {
            //        name: 'carparts',
            //        display: 'name',
            //        source: carParts
            //    });

            $('#job .typeahead').on("typeahead:select",
                function (e, job) {

                    console.log(job);
                    //When a Job item has been selected, append selected job onto list //
                    $("#jobs").append("<li class='list-group-item' value='" + job.jobId + "'>" + job.jobRequirements + "</li>");
                    setTimeout(function () { $("#jbookingjobs").val(''); }, 500);
                    vm.jobIds.push(job.jobId);
                    // bug? No way to remove job ids yet
                    $("#Booking_JobIds").val(vm.jobIds.toString());
                });

            //$('#carpart .typeahead').on("typeahead:select",
            //    function (e, carpart) {
            //        console.log(carpart);
            //        //When a Job item has been selected, append selected job onto list //
            //        setTimeout(function () { $("#jbookingparts").val(''); },500);
            //        $("#partslist").append("<li class='list-group-item' value='" + carpart.partId + "'>" + carpart.name + "</li>");
            //        vm.carPartIds.push(carpart.partId);
            //        $("#Booking_PartIds").val(vm.carPartIds.toString());
            //    });

        });

    </script>
}

